version: '3'
services:
  db:
    container_name: db
    image: postgres:15-alpine
    restart: always
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  rabbitmq:
    hostname: 'rabbitmq'
    image: rabbitmq:3.13.2
    restart: on-failure
    expose:
      - 5672
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - media_value:/app/media/
      - static_value:/app/static/
    depends_on:
      - db

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "celery -A analyst.celery worker"
    restart: always
    env_file:
      - .env
    depends_on:
      - backend

  certbot:
    image: certbot/certbot:latest
    restart: always
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: deploy/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - media_value:/var/html/media/
      - static_value:/var/html/static/
      - ./titan_frontend/front_dist:/usr/share/nginx/html/

    depends_on:
      - certbot
      - backend

volumes:
  static_value:
  media_value:
  postgres_data:
  rabbitmq_data:

networks:                                
  default:                               
    driver: bridge                       
    driver_opts:                         
      com.docker.network.driver.mtu: 1450